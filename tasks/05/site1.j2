conf t
hostname {{ variables.hostname }}
ip domain-name example.com
enable secret {{ variables.enable_secret }}
username {{ variables.username }} privilege 15 secret {{ variables.secret }}
crypto key generate rsa 2048
ip ssh version 2
line vty 0 4
 login local
 transport input ssh
 exit
{% for interface in variables.interfaces %}
interface {{ interface.name }}
 description {{ interface.description }}
 ip address {{ interface.ip }} {{ interface.mask }}
 {% if interface.enabled %}
 no shutdown
 {% else %}
 shutdown
 {% endif %}
 {% if interface.name != 'Loopback0' %}
 speed {{ interface.speed }}
 duplex {{ interface.duplex }}
 {% endif %}
exit
{% endfor %}

ip bgp-community new-format

router bgp {{ variables.bgp.as }}
{% if variables.bgp.router_id %}
 bgp router-id {{ variables.bgp.router_id }}
{% endif %}
neighbor {{ variables.bgp.neighbor }} description {{ variables.bgp.neighbors.neighbor.description }}
{% for neighbor in variables.bgp.neighbors %}
 neighbor {{ neighbor.neighbor }} remote-as {{ neighbor.remote_as }}
  {% if neighbor.next_hop_self %}
 neighbor {{ neighbor.neighbor }} next-hop-self
  {% endif %}
  {% if neighbor.send_community %}
 neighbor {{ neighbor.neighbor }} send_community
  {% endif %}
  {% if neighbor.route_map_out %}
 neighbor {{ neighbor.neighbor }} route-map route_map_out_to_R1 out
 neighbor {{ neighbor.neighbor }} route-map route_map_out_to_R2 out
  {% endif %}
  {% if neighbor.route_map_in %}
 neighbor {{ neighbor.neighbor }} route-map route_map_in_from_R3 in
  {% endif %}
{% endfor %}
end

{% if variables.hostname == 'R1' or variables.hostname == 'R2' %}
 ip community-list 1 permit 100:300
 ip community-list 2 permit 100:250
 route-map Peer_R3 permit 10
 match community 1
 set local-preference 130
 exit
 route-map Peer_R3 permit 20
 match community 2
 set local-preference 125
 exit
 route-map Peer_R3 permit 30
 exit  
{% endif %}

{% if variables.hostname == 'R3' %}
 access-list 101 permit ip host 10.0.10.0 host 255.255.255.0
 access-list 102 permit ip host 10.1.0.0 host 255.255.255.0
 route-map Peer_R1 permit 10
 match ip address 101
 set communit 100:300
 exit
 route-map Peer_R1 permit 20
 match ip address 102
 set communit 100:250
 exit
route-map Peer_R2 permit 10
 match ip address 101
 set communit 100:250
 exit
 route-map Peer_R2 permit 20
 match ip address 102
 set communit 100:300
 exit
{% endif %}
end
write memory